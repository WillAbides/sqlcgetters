// Code generated by sqlcgetters; DO NOT EDIT.

package datatype

import (
	"database/sql"
	"time"

	"github.com/tabbed/pqtype"
)

func (x DtCharacter) GetA() sql.NullString {
	return x.A
}

func (x DtCharacter) GetB() sql.NullString {
	return x.B
}

func (x DtCharacter) GetC() sql.NullString {
	return x.C
}

func (x DtCharacter) GetD() sql.NullString {
	return x.D
}

func (x DtCharacter) GetE() sql.NullString {
	return x.E
}

func (x DtCharacterNotNull) GetA() string {
	return x.A
}

func (x DtCharacterNotNull) GetB() string {
	return x.B
}

func (x DtCharacterNotNull) GetC() string {
	return x.C
}

func (x DtCharacterNotNull) GetD() string {
	return x.D
}

func (x DtCharacterNotNull) GetE() string {
	return x.E
}

func (x DtDatetime) GetA() sql.NullTime {
	return x.A
}

func (x DtDatetime) GetB() sql.NullTime {
	return x.B
}

func (x DtDatetime) GetC() sql.NullTime {
	return x.C
}

func (x DtDatetime) GetD() sql.NullTime {
	return x.D
}

func (x DtDatetime) GetE() sql.NullTime {
	return x.E
}

func (x DtDatetime) GetF() sql.NullTime {
	return x.F
}

func (x DtDatetime) GetG() sql.NullTime {
	return x.G
}

func (x DtDatetime) GetH() sql.NullTime {
	return x.H
}

func (x DtDatetimeNotNull) GetA() time.Time {
	return x.A
}

func (x DtDatetimeNotNull) GetB() time.Time {
	return x.B
}

func (x DtDatetimeNotNull) GetC() time.Time {
	return x.C
}

func (x DtDatetimeNotNull) GetD() time.Time {
	return x.D
}

func (x DtDatetimeNotNull) GetE() time.Time {
	return x.E
}

func (x DtDatetimeNotNull) GetF() time.Time {
	return x.F
}

func (x DtDatetimeNotNull) GetG() time.Time {
	return x.G
}

func (x DtDatetimeNotNull) GetH() time.Time {
	return x.H
}

func (x DtNetType) GetA() pqtype.Inet {
	return x.A
}

func (x DtNetType) GetB() pqtype.CIDR {
	return x.B
}

func (x DtNetType) GetC() pqtype.Macaddr {
	return x.C
}

func (x DtNetTypesNotNull) GetA() pqtype.Inet {
	return x.A
}

func (x DtNetTypesNotNull) GetB() pqtype.CIDR {
	return x.B
}

func (x DtNetTypesNotNull) GetC() pqtype.Macaddr {
	return x.C
}

func (x DtNumeric) GetA() int16 {
	return x.A
}

func (x DtNumeric) GetB() sql.NullInt32 {
	return x.B
}

func (x DtNumeric) GetC() sql.NullInt64 {
	return x.C
}

func (x DtNumeric) GetD() sql.NullString {
	return x.D
}

func (x DtNumeric) GetE() sql.NullString {
	return x.E
}

func (x DtNumeric) GetF() sql.NullFloat64 {
	return x.F
}

func (x DtNumeric) GetG() sql.NullFloat64 {
	return x.G
}

func (x DtNumeric) GetH() int16 {
	return x.H
}

func (x DtNumeric) GetI() sql.NullInt32 {
	return x.I
}

func (x DtNumeric) GetJ() sql.NullInt64 {
	return x.J
}

func (x DtNumeric) GetK() int16 {
	return x.K
}

func (x DtNumeric) GetL() sql.NullInt32 {
	return x.L
}

func (x DtNumeric) GetM() sql.NullInt64 {
	return x.M
}

func (x DtNumericNotNull) GetA() int16 {
	return x.A
}

func (x DtNumericNotNull) GetB() int32 {
	return x.B
}

func (x DtNumericNotNull) GetC() int64 {
	return x.C
}

func (x DtNumericNotNull) GetD() string {
	return x.D
}

func (x DtNumericNotNull) GetE() string {
	return x.E
}

func (x DtNumericNotNull) GetF() float32 {
	return x.F
}

func (x DtNumericNotNull) GetG() float64 {
	return x.G
}

func (x DtNumericNotNull) GetH() int16 {
	return x.H
}

func (x DtNumericNotNull) GetI() int32 {
	return x.I
}

func (x DtNumericNotNull) GetJ() int64 {
	return x.J
}

func (x DtNumericNotNull) GetK() int16 {
	return x.K
}

func (x DtNumericNotNull) GetL() int32 {
	return x.L
}

func (x DtNumericNotNull) GetM() int64 {
	return x.M
}

func (x DtRange) GetA() interface{} {
	return x.A
}

func (x DtRange) GetB() interface{} {
	return x.B
}

func (x DtRange) GetC() interface{} {
	return x.C
}

func (x DtRange) GetD() interface{} {
	return x.D
}

func (x DtRange) GetE() interface{} {
	return x.E
}

func (x DtRange) GetF() interface{} {
	return x.F
}

func (x DtRangeNotNull) GetA() interface{} {
	return x.A
}

func (x DtRangeNotNull) GetB() interface{} {
	return x.B
}

func (x DtRangeNotNull) GetC() interface{} {
	return x.C
}

func (x DtRangeNotNull) GetD() interface{} {
	return x.D
}

func (x DtRangeNotNull) GetE() interface{} {
	return x.E
}

func (x DtRangeNotNull) GetF() interface{} {
	return x.F
}
